<Type Name="FuncConverter&lt;TSource,TDest,TParam&gt;" FullName="Xamarin.Forms.Markup.FuncConverter&lt;TSource,TDest,TParam&gt;">
  <TypeSignature Language="C#" Value="public class FuncConverter&lt;TSource,TDest,TParam&gt; : Xamarin.Forms.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FuncConverter`3&lt;TSource, TDest, TParam&gt; extends System.Object implements class Xamarin.Forms.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.Markup.FuncConverter`3" />
  <TypeSignature Language="F#" Value="type FuncConverter&lt;'Source, 'Dest, 'Param&gt; = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
    <TypeParameter Name="TDest" />
    <TypeParameter Name="TParam" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xamarin.Forms.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TSource">To be added.</typeparam>
    <typeparam name="TDest">To be added.</typeparam>
    <typeparam name="TParam">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FuncConverter (Func&lt;TSource,TDest&gt; convert = null, Func&lt;TDest,TSource&gt; convertBack = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TSource, !TDest&gt; convert, class System.Func`2&lt;!TDest, !TSource&gt; convertBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Markup.FuncConverter`3.#ctor(System.Func{`0,`1},System.Func{`1,`0})" />
      <MemberSignature Language="F#" Value="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; : Func&lt;'Source, 'Dest&gt; * Func&lt;'Dest, 'Source&gt; -&gt; Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt;" Usage="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; (convert, convertBack)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convert" Type="System.Func&lt;TSource,TDest&gt;" />
        <Parameter Name="convertBack" Type="System.Func&lt;TDest,TSource&gt;" />
      </Parameters>
      <Docs>
        <param name="convert">To be added.</param>
        <param name="convertBack">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FuncConverter (Func&lt;TSource,TParam,System.Globalization.CultureInfo,TDest&gt; convertWithParamAndCulture = null, Func&lt;TDest,TParam,System.Globalization.CultureInfo,TSource&gt; convertBackWithParamAndCulture = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`4&lt;!TSource, !TParam, class System.Globalization.CultureInfo, !TDest&gt; convertWithParamAndCulture, class System.Func`4&lt;!TDest, !TParam, class System.Globalization.CultureInfo, !TSource&gt; convertBackWithParamAndCulture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Markup.FuncConverter`3.#ctor(System.Func{`0,`2,System.Globalization.CultureInfo,`1},System.Func{`1,`2,System.Globalization.CultureInfo,`0})" />
      <MemberSignature Language="F#" Value="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; : Func&lt;'Source, 'Param, System.Globalization.CultureInfo, 'Dest&gt; * Func&lt;'Dest, 'Param, System.Globalization.CultureInfo, 'Source&gt; -&gt; Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt;" Usage="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; (convertWithParamAndCulture, convertBackWithParamAndCulture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convertWithParamAndCulture" Type="System.Func&lt;TSource,TParam,System.Globalization.CultureInfo,TDest&gt;" />
        <Parameter Name="convertBackWithParamAndCulture" Type="System.Func&lt;TDest,TParam,System.Globalization.CultureInfo,TSource&gt;" />
      </Parameters>
      <Docs>
        <param name="convertWithParamAndCulture">To be added.</param>
        <param name="convertBackWithParamAndCulture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FuncConverter (Func&lt;TSource,TParam,TDest&gt; convertWithParam = null, Func&lt;TDest,TParam,TSource&gt; convertBackWithParam = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`3&lt;!TSource, !TParam, !TDest&gt; convertWithParam, class System.Func`3&lt;!TDest, !TParam, !TSource&gt; convertBackWithParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Markup.FuncConverter`3.#ctor(System.Func{`0,`2,`1},System.Func{`1,`2,`0})" />
      <MemberSignature Language="F#" Value="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; : Func&lt;'Source, 'Param, 'Dest&gt; * Func&lt;'Dest, 'Param, 'Source&gt; -&gt; Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt;" Usage="new Xamarin.Forms.Markup.FuncConverter&lt;'Source, 'Dest, 'Param&gt; (convertWithParam, convertBackWithParam)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convertWithParam" Type="System.Func&lt;TSource,TParam,TDest&gt;" />
        <Parameter Name="convertBackWithParam" Type="System.Func&lt;TDest,TParam,TSource&gt;" />
      </Parameters>
      <Docs>
        <param name="convertWithParam">To be added.</param>
        <param name="convertBackWithParam">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Markup.FuncConverter`3.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="funcConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.Markup.FuncConverter`3.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="funcConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Xamarin.Forms.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
